box: 7.5
cache: false
classes: null
cls: 0.5
copy_paste: 0.0
degrees: 0.0
dfl: 1.5
download: "import xml.etree.ElementTree as ET\n\nfrom tqdm import tqdm\nfrom ultralytics.utils.downloads
  import download\nfrom pathlib import Path\nimport os\nimport yaml\n\n\ndef convert_label(path,
  lb_path, year, image_id):\n    def convert_box(size, box):\n        dw, dh = 1.0
  / size[0], 1.0 / size[1]\n        x, y, w, h = (\n            (box[0] + box[1])
  / 2.0 - 1,\n            (box[2] + box[3]) / 2.0 - 1,\n            box[1] - box[0],\n
  \           box[3] - box[2],\n        )\n        return x * dw, y * dh, w * dw,
  h * dh\n\n    in_file = open(path / f\"VOC{year}/Annotations/{image_id}.xml\")\n
  \   out_file = open(lb_path, \"w\")\n    import xml.etree.ElementTree as ET\n    tree
  = ET.parse(in_file)\n    root = tree.getroot()\n    size = root.find(\"size\")\n
  \   w = int(size.find(\"width\").text)\n    h = int(size.find(\"height\").text)\n
  \   with open(\"./cfg/data/VOC.yaml\", \"r\") as file:\n        import yaml\n        data_cfg
  = yaml.safe_load(file)\n    names = list(data_cfg[\"names\"].values())  # names
  list\n    for obj in root.iter(\"object\"):\n        cls = obj.find(\"name\").text\n
  \       if cls in names and int(obj.find(\"difficult\").text) != 1:\n            xmlbox
  = obj.find(\"bndbox\")\n            bb = convert_box(\n                (w, h),\n
  \               [float(xmlbox.find(x).text) for x in (\"xmin\", \"xmax\", \"ymin\",
  \"ymax\")],\n            )\n            cls_id = names.index(cls)  # class id\n
  \           out_file.write(\" \".join(str(a) for a in (cls_id, *bb)) + \"\\n\")\n\n\ndef
  unzip_file(zip_file_path, extract_to_path):\n    with zipfile.ZipFile(zip_file_path,
  \"r\") as zip_ref:\n        zip_ref.extractall(extract_to_path)\n\n\n# Download\ndir
  = Path(data_cfg['path'])\nurl = \"https://github.com/ultralytics/yolov5/releases/download/v1.0/\"\nurls
  = [\n    f\"{url}VOCtrainval_06-Nov-2007.zip\",  # 446MB, 5012 images\n    f\"{url}VOCtest_06-Nov-2007.zip\",
  \ # 438MB, 4953 images\n    f\"{url}VOCtrainval_11-May-2012.zip\",\n]  # 1.95GB,
  17126 images\ndownload(urls, dir=dir / \"images\", curl=True, unzip=False, threads=3)\n\n#
  Unzip\nimport zipfile\nfor source, dest in (\n    (dir / \"images/VOCtest_06-Nov-2007.zip\",
  dir / \"images\"),\n    (dir / \"images/VOCtrainval_06-Nov-2007.zip\", dir / \"images\"),\n
  \   (dir / \"images/VOCtrainval_11-May-2012.zip\", dir / \"images\"),\n):\n    os.makedirs(dest,
  exist_ok=True)\n    with zipfile.ZipFile(source, \"r\") as zip_ref:\n        zip_ref.extractall(dest)\n
  \   print(f\"Unziped file: {source}\")\n\nwith open(\"./cfg/data/VOC.yaml\", \"r\")
  as file:\n    data_cfg = yaml.safe_load(file)\n\n# Convert\npath = dir / \"images/VOCdevkit\"\nfor
  year, image_set in (\n    (\"2012\", \"train\"),\n    (\"2012\", \"val\"),\n    (\"2007\",
  \"train\"),\n    (\"2007\", \"val\"),\n    (\"2007\", \"test\"),\n):\n    imgs_path
  = dir / \"images\" / f\"{image_set}{year}\"\n    lbs_path = dir / \"labels\" / f\"{image_set}{year}\"\n
  \   imgs_path.mkdir(exist_ok=True, parents=True)\n    lbs_path.mkdir(exist_ok=True,
  parents=True)\n\n    with open(path / f\"VOC{year}/ImageSets/Main/{image_set}.txt\")
  as f:\n        image_ids = f.read().strip().split()\n    for id in tqdm(image_ids,
  desc=f\"{image_set}{year}\"):\n        f = path / f\"VOC{year}/JPEGImages/{id}.jpg\"
  \ # old img path\n        lb_path = (lbs_path / f.name).with_suffix(\".txt\")  #
  new label path\n        if os.path.exists(f):\n            f.rename(imgs_path /
  f.name)  # move image\n            convert_label(path, lb_path, year, id)  # convert
  labels to YOLO format\n        else:\n            print(f\"skipping file {f}\")\n"
fliplr: 0.5
flipud: 0.0
fraction: 1.0
hsv_h: 0.015
hsv_s: 0.7
hsv_v: 0.4
imgsz: 640
mask_ratio: 4
mixup: 0.0
mode: train
mosaic: 1.0
names:
  0: aeroplane
  1: bicycle
  2: bird
  3: boat
  4: bottle
  5: bus
  6: car
  7: cat
  8: chair
  9: cow
  10: diningtable
  11: dog
  12: horse
  13: motorbike
  14: person
  15: pottedplant
  16: sheep
  17: sofa
  18: train
  19: tvmonitor
overlap_mask: true
path: datasets/VOC
perspective: 0.0
rect: false
scale: 0.5
shear: 0.0
single_cls: false
task: detect
test: images/test2007
train:
- images/train2012
- images/train2007
- images/val2012
- images/val2007
translate: 0.1
val:
- /mnt/disk1/riccardo/VOC/VOC/images/test2007
